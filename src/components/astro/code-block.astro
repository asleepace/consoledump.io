---
import { cn } from '@/lib/utils'

export interface Props {
  code?: string
  title?: string
  filename?: string
  showLineNumbers?: boolean
  highlightLines?: number[]
  'data-language'?: string
}

const props = Astro.props
const { title, filename, 'data-language': lang } = props
const uniqueRef = crypto.randomUUID().slice(0, 8)
---

<div
  id="code-container"
  class={cn(
    'code-container my-8 rounded-xl border border-white/10 bg-neutral-900/50 backdrop-blur-sm shadow-2xl transition-all duration-300 ease-in-out',
    '[&[data-copied]]:ring-2 [&[data-copied]]:ring-orange-400/50 [&[data-copied]]:border-orange-400/30',
    'max-w-full overflow-hidden'
  )}
>
  {
    (title || filename) && (
      <div class="code-header">
        <div class="flex items-center gap-3 min-w-0">
          {filename && <span class="code-filename truncate">{filename}</span>}
          {title && <span class="code-title truncate">{title}</span>}
        </div>
        <div class="flex items-center gap-2">
          <span class="code-lang">{lang}</span>
          <button
            class="copy-btn"
            type="button"
            title="Copy code"
            data-for={uniqueRef}
          >
            Copy
          </button>
        </div>
      </div>
    )
  }
  <div id={uniqueRef} class="code-wrapper overflow-x-auto">
    <pre class="min-w-max" {...props}><slot /></pre>
  </div>
</div>

<script is:inline define:vars={{ uniqueRef }}>
  const codeWrapper = document.getElementById(uniqueRef)

  async function doCopy() {
    try {
      const code = document.querySelector(`#${uniqueRef} pre > code`)
      await navigator.clipboard.writeText(code.textContent || '')
      codeWrapper.parentElement.setAttribute('data-copied', '1')
    } catch (err) {
      console.warn('[code] failed to save code:', err)
    } finally {
      setTimeout(() => {
        codeWrapper.parentElement.removeAttribute('data-copied')
      }, 300)
    }
  }

  codeWrapper?.addEventListener('dblclick', doCopy)

  const headerCopyBtn = document.querySelector(`[data-for="${uniqueRef}"]`)
  headerCopyBtn?.addEventListener('click', doCopy)
</script>

<style is:global>
  @import 'tailwindcss';

  pre > code {
    all: unset;
    display: inline-block;
    margin: 0;
    padding: 0;
    vertical-align: top;
  }

  pre {
    @apply !bg-transparent;
    margin: 0;
    padding: 0;
  }

  .code-container {
    max-width: 100%;
    width: 100%;
    overflow: hidden;
    position: relative;
  }

  .code-header {
    @apply flex items-center justify-between px-4 py-3 bg-white/5 backdrop-blur-sm;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    font-size: 0.875rem;
  }

  .code-filename {
    @apply text-orange-400 font-semibold;
  }

  .code-title {
    @apply text-neutral-300;
  }

  .code-lang {
    @apply px-2 py-1 rounded-md bg-white/10 text-neutral-400 font-medium;
    font-size: 0.7rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .code-wrapper {
    position: relative;
    max-width: 100%;
    overflow-x: auto;
  }

  .copy-btn {
    @apply px-3 py-1.5 rounded-lg border border-white/20 bg-white/5 text-neutral-200 font-medium;
    @apply hover:bg-white/10 hover:border-white/30 hover:text-white;
    @apply active:scale-95;
    font-size: 0.75rem;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  .code-wrapper pre {
    overflow-x: auto;
    font-size: 14px;
    line-height: 1.6;
    scrollbar-gutter: stable;
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
    padding: 1rem;
  }

  code {
    white-space: pre;
    font-feature-settings: 'liga' 0;
  }

  /* Improve small-screen code readability */
  @media (max-width: 480px) {
    .code-wrapper pre {
      font-size: 13px;
      line-height: 1.55;
      padding: 0.75rem;
    }
  }

  /* Enhanced scrollbar */
  pre::-webkit-scrollbar {
    height: 8px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 4px;
  }

  pre::-webkit-scrollbar-track {
    background: transparent;
    margin: 0 8px;
  }

  pre::-webkit-scrollbar-thumb {
    background: rgba(251, 146, 60, 0.3);
    border-radius: 4px;
    transition: background 0.2s ease;
  }

  pre::-webkit-scrollbar-thumb:hover {
    background: rgba(251, 146, 60, 0.5);
  }
</style>
